import EmbarkJS from '../embarkjs';

const ExponentialConfig = {"abiDefinition":[],"deployedAddress":"0x031Aa6B567B804F4470D63D39f4B039370c52Caf","className":"Exponential","args":[],"gas":"auto","gasPrice":"20000000000","silent":false,"track":true,"deploy":true,"realRuntimeBytecode":"6080604052600080fdfea265627a7a723058202139cda7f6a5c18a5d","realArgs":[],"code":"6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723058202139cda7f6a5c18a5de28b19231f598c419bb7b49547bf9c7b44b74113da811564736f6c634300050a0032","runtimeBytecode":"6080604052600080fdfea265627a7a723058202139cda7f6a5c18a5de28b19231f598c419bb7b49547bf9c7b44b74113da811564736f6c634300050a0032","linkReferences":{},"swarmHash":"e28b19231f598c419bb7b49547bf9c7b44b74113da811564736f6c634300050a","gasEstimates":{"creation":{"codeDepositCost":"12400","executionCost":"66","totalCost":"12466"},"internal":{"addExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","divExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","divScalar(struct Exponential.Exp memory,uint256)":"infinite","divScalarByExp(uint256,struct Exponential.Exp memory)":"infinite","divScalarByExpTruncate(uint256,struct Exponential.Exp memory)":"infinite","getExp(uint256,uint256)":"infinite","greaterThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","isZeroExp(struct Exponential.Exp memory)":"infinite","lessThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","lessThanOrEqualExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","mulExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","mulExp(uint256,uint256)":"infinite","mulExp3(struct Exponential.Exp memory,struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","mulScalar(struct Exponential.Exp memory,uint256)":"infinite","mulScalarTruncate(struct Exponential.Exp memory,uint256)":"infinite","mulScalarTruncateAddUInt(struct Exponential.Exp memory,uint256,uint256)":"infinite","subExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","truncate(struct Exponential.Exp memory)":"infinite"}},"functionHashes":{},"filename":"C:/Users/Development/Documents/GitHub/RemCare/.embark/contracts/shared-contracts/compound/Exponential.sol","originalFilename":"contracts\\shared-contracts\\compound\\Exponential.sol","path":"C:\\Users\\Development\\Documents\\GitHub\\RemCare\\contracts\\shared-contracts\\compound\\Exponential.sol","type":"file","deploymentAccount":"0xFdb1E986D5D22DA4904755488Ae799e89224e2d8","transactionHash":"0xa4ee766171d2b8d81f9c505e28cc6d617a68d634686f0e5326bc16ded9ddf779"};
const Exponential = new EmbarkJS.Blockchain.Contract(ExponentialConfig);

export default Exponential;
